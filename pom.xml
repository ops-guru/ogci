<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>2.21</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.opsguru.ci.jenkins</groupId>
    <artifactId>ogci</artifactId>
    <version>1.0.0</version>
    <name>OpsGuru CI Library</name>
    <description>Shared library containing steps and utilities to set up CI/CD processes.</description>
    <url>https://ops-guru.github.io/ogci/</url>

    <licenses>
      <license>
        <name>Apache License 2.0</name>
        <comments>https://github.com/SAP/jenkins-library/blob/master/LICENSE</comments>
      </license>
    </licenses>

    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <findbugs.skip>true</findbugs.skip>
        <jenkins.version>2.32.3</jenkins.version>
        <pipeline.version>2.5</pipeline.version>
        <cps.global.lib.version>2.6</cps.global.lib.version>
        <junit.version>1.23</junit.version>
        <workflow-api.version>2.22</workflow-api.version>
        <workflow-support.version>2.13</workflow-support.version>
        <pipeline-utility-steps.version>1.5.0</pipeline-utility-steps.version>
        <jenkins-pipeline-unit.version>1.1</jenkins-pipeline-unit.version>
        <assertj-core.version>3.11.1</assertj-core.version>
        <groovy-all.version>2.4.12</groovy-all.version>
        <snakeyaml.version>1.19</snakeyaml.version>
        <spring-context.version>4.3.12.RELEASE</spring-context.version>
        <spring-context-support.version>4.3.10.RELEASE</spring-context-support.version>
        <spring-test.version>4.3.5.RELEASE</spring-test.version>
        <build-helper-maven-plugin.version>1.12</build-helper-maven-plugin.version>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <groovy-eclipse-compiler.version>2.9.2-01</groovy-eclipse-compiler.version>
        <groovy-eclipse-batch.version>2.4.3-01</groovy-eclipse-batch.version>
        <jacoco-maven-plugin.version>0.8.0</jacoco-maven-plugin.version>
        <ssh-slaves.version>1.24</ssh-slaves.version>
    </properties>


    <dependencies>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-aggregator</artifactId>
            <version>${pipeline.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-cps-global-lib</artifactId>
            <version>${cps.global.lib.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-api</artifactId>
            <version>${workflow-api.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-support</artifactId>
            <version>${workflow-support.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>pipeline-utility-steps</artifactId>
            <version>${pipeline-utility-steps.version}</version>
            <scope>test</scope>
        </dependency>

        <!--LesFurets Jenkins Pipeline Unit testing framework: https://github.com/lesfurets/JenkinsPipelineUnit-->
        <dependency>
            <groupId>com.lesfurets</groupId>
            <artifactId>jenkins-pipeline-unit</artifactId>
            <version>${jenkins-pipeline-unit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <!-- any version of Groovy \>= 1.5.0 should work here -->
            <version>${groovy-all.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${snakeyaml.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jenkins-ci.plugins/ssh-slaves -->
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>ssh-slaves</artifactId>
            <version>${ssh-slaves.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-context.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring-context-support.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring-test.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>add-groovy-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src</source>
                                <source>vars</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-groovy-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>test/groovy</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <testSourceDirectory>test/java</testSourceDirectory>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <compilerId>groovy-eclipse-compiler</compilerId>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-eclipse-compiler</artifactId>
                        <version>${groovy-eclipse-compiler.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-eclipse-batch</artifactId>
                        <version>${groovy-eclipse-batch.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <!-- UNIT TESTS -->
                    <!-- http://www.eclemma.org/jacoco/trunk/doc/maven.html
                    Default settings
                        propertyName: argLine
                        destFile: ${project.build.directory}/jacoco.exec
                        dataFile: ${project.build.directory}/jacoco.exec
                        outputDirectory: ${project.reporting.outputDirectory}/jacoco
                    -->
                    <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Surefire plugin is executed. -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals><goal>prepare-agent</goal></goals>
                    </execution>
                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>package</phase>
                        <goals><goal>report</goal></goals>
                    </execution>
                    <!-- INTEGRATION TESTS -->
                    <!-- http://www.eclemma.org/jacoco/trunk/doc/maven.html
                    Default settings
                        propertyName: argLine
                        destFile: ${project.build.directory}/jacoco-it.exec
                        dataFile: ${project.build.directory}/jacoco-it.exec
                        outputDirectory: ${project.reporting.outputDirectory}/jacoco-it
                    -->
                    <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Failsafe plugin is executed. -->
                    <execution>
                        <id>pre-integration-test</id>
                        <goals><goal>prepare-agent-integration</goal></goals>
                    </execution>
                    <!-- Ensures that the code coverage report for integration tests after integration tests have been run. -->
                    <execution>
                        <id>post-integration-test</id>
                        <goals><goal>report-integration</goal></goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
